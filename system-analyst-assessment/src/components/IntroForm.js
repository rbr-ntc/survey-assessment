import { useState } from 'react'
import { useAssessment } from './AssessmentContext'
import TestRulesModal from './TestRulesModal'

const experienceOptions = [
	'–ú–µ–Ω—å—à–µ –≥–æ–¥–∞',
	'1-2 –≥–æ–¥–∞',
	'2-3 –≥–æ–¥–∞',
	'3-5 –ª–µ—Ç',
	'5+ –ª–µ—Ç',
]

const IntroForm = ({ questionsCount = 0 }) => {
	const {
		handleStartAssessment,
		startQuickTest,
		questions,
		isQuestionsLoading,
	} = useAssessment()
	const [formData, setFormData] = useState({
		name: '',
		email: '',
		experience: '',
	})
	const [isLoading, setIsLoading] = useState(false)
	const [isQuickTestLoading, setIsQuickTestLoading] = useState(false)
	const [showRulesModal, setShowRulesModal] = useState(false)

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤–∫–ª—é—á–µ–Ω—ã –ª–∏ quick-test
	const isQuickTestEnabled =
		process.env.NEXT_PUBLIC_ENABLE_QUICK_TEST === 'true'

	const handleInputChange = e => {
		const { name, value } = e.target
		setFormData(prev => ({
			...prev,
			[name]: value,
		}))
	}

	const handleSubmit = async e => {
		e.preventDefault()
		if (
			!formData.name.trim() ||
			!formData.email.trim() ||
			!formData.experience.trim()
		) {
			alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è')
			return
		}

		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏
		setShowRulesModal(true)
	}

	const handleStartTest = async () => {
		setIsLoading(true)
		try {
			await handleStartAssessment(formData)
		} catch (error) {
			console.error('Error starting assessment:', error)
			alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
		} finally {
			setIsLoading(false)
		}
	}

	const handleQuickTest = async testType => {
		setIsQuickTestLoading(true)
		try {
			await startQuickTest(testType)
		} catch (error) {
			console.error('Error starting quick test:', error)
			alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∞')
		} finally {
			setIsQuickTestLoading(false)
		}
	}

	return (
		<div className='flex items-center justify-center min-h-screen'>
			<div className='w-full max-w-md bg-white rounded-2xl shadow-xl p-8 flex flex-col gap-6'>
				<div className='flex flex-col items-center gap-2'>
					<div className='text-4xl mb-2'>üéØ</div>
					<h1 className='text-2xl font-bold text-gray-800 text-center'>
						–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
						<br />
						—Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
					</h1>
					<p className='text-gray-400 text-center text-base'>
						{isQuestionsLoading
							? '–ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤...'
							: questions.length > 0
							? `${questions.length} –≤–æ–ø—Ä–æ—Å${
									questions.length === 1
										? ''
										: questions.length < 5
										? '–∞'
										: '–æ–≤'
							  } ‚Ä¢ 15-20 –º–∏–Ω—É—Ç ‚Ä¢ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏`
							: '0 –≤–æ–ø—Ä–æ—Å–æ–≤ ‚Ä¢ 15-20 –º–∏–Ω—É—Ç ‚Ä¢ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏'}
					</p>
				</div>

				<form className='flex flex-col gap-4' onSubmit={handleSubmit}>
					<input
						className='w-full px-4 py-3 rounded-lg border border-gray-200 focus:border-blue-400 focus:ring-2 focus:ring-blue-100 outline-none transition placeholder-gray-400 bg-white text-gray-900'
						type='text'
						name='name'
						placeholder='–í–∞—à–µ –∏–º—è'
						value={formData.name}
						onChange={handleInputChange}
						required
					/>
					<input
						className='w-full px-4 py-3 rounded-lg border border-gray-200 focus:border-blue-400 focus:ring-2 focus:ring-blue-100 outline-none transition placeholder-gray-400 bg-white text-gray-900'
						type='email'
						name='email'
						placeholder='Email'
						value={formData.email}
						onChange={handleInputChange}
						required
					/>
					<p className='text-xs text-gray-500 -mt-2'>
						Email –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏ –Ω–µ
						—Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
					</p>
					<select
						className='w-full px-4 py-3 rounded-lg border border-gray-200 focus:border-blue-400 focus:ring-2 focus:ring-blue-100 outline-none transition bg-white text-gray-900'
						name='experience'
						value={formData.experience}
						onChange={handleInputChange}
						required
					>
						<option value=''>–û–ø—ã—Ç –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ</option>
						{experienceOptions.map(opt => (
							<option key={opt} value={opt}>
								{opt}
							</option>
						))}
					</select>
					<button
						type='submit'
						className='w-full py-3 rounded-lg bg-blue-400 text-white font-semibold text-lg shadow-sm hover:bg-blue-500 transition disabled:bg-gray-300 disabled:cursor-not-allowed'
						disabled={isLoading || isQuestionsLoading}
					>
						{isLoading
							? '–ó–∞–ø—É—Å–∫...'
							: isQuestionsLoading
							? '–ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤...'
							: '–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'}
					</button>
				</form>

				{/* Quick Test –∫–Ω–æ–ø–∫–∏ - –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∫–æ–≥–¥–∞ –≤–∫–ª—é—á–µ–Ω—ã */}
				{isQuickTestEnabled && (
					<div className='border-t border-gray-200 pt-4'>
						<h3 className='text-lg font-semibold text-center mb-4 text-gray-700'>
							–ë—ã—Å—Ç—Ä–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ (—Ç–æ–ª—å–∫–æ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
						</h3>
						<div className='grid grid-cols-2 gap-3'>
							<button
								onClick={() => handleQuickTest('expert')}
								disabled={isQuickTestLoading}
								className='bg-green-600 text-white py-2 px-3 rounded-md hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 disabled:opacity-50 disabled:cursor-not-allowed text-sm'
							>
								{isQuickTestLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–≠–∫—Å–ø–µ—Ä—Ç'}
							</button>
							<button
								onClick={() => handleQuickTest('intermediate')}
								disabled={isQuickTestLoading}
								className='bg-yellow-600 text-white py-2 px-3 rounded-md hover:bg-yellow-700 focus:outline-none focus:ring-2 focus:ring-yellow-500 disabled:opacity-50 disabled:cursor-not-allowed text-sm'
							>
								{isQuickTestLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–°—Ä–µ–¥–Ω–∏–π'}
							</button>
							<button
								onClick={() => handleQuickTest('beginner')}
								disabled={isQuickTestLoading}
								className='bg-red-600 text-white py-2 px-3 rounded-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 disabled:opacity-50 disabled:cursor-not-allowed text-sm'
							>
								{isQuickTestLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–ù–∞—á–∏–Ω–∞—é—â–∏–π'}
							</button>
							<button
								onClick={() => handleQuickTest('random')}
								disabled={isQuickTestLoading}
								className='bg-purple-600 text-white py-2 px-3 rounded-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 disabled:opacity-50 disabled:cursor-not-allowed text-sm'
							>
								{isQuickTestLoading ? '–ó–∞–≥—Ä—É–∑–∫–∞...' : '–°–ª—É—á–∞–π–Ω–æ'}
							</button>
						</div>
						<p className='text-xs text-gray-500 text-center mt-2'>
							–≠—Ç–∏ –∫–Ω–æ–ø–∫–∏ –≤–∏–¥–Ω—ã —Ç–æ–ª—å–∫–æ –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
						</p>
					</div>
				)}

				<div className='bg-gray-100 rounded-lg p-4 mt-2 text-sm text-gray-700'>
					<div className='font-semibold mb-1'>–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:</div>
					<ul className='list-disc list-inside space-y-1'>
						<li>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è (Junior/Middle/Senior)</li>
						<li>–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π</li>
						<li>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è –æ—Ç AI</li>
						<li>–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Ä–µ—Å—É—Ä—Å—ã</li>
					</ul>
				</div>

				{/* –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö */}
				<div className='bg-blue-50 border border-blue-200 rounded-lg p-4 text-sm'>
					<div className='flex items-start gap-3'>
						<div className='text-blue-600 text-lg'>üîí</div>
						<div className='flex-1'>
							<div className='font-semibold text-blue-800 mb-1'>
								–ö–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å –∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
							</div>
							<div className='text-blue-700 space-y-2'>
								<p>
									–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ <strong>–ù–ï —Å–æ–±–∏—Ä–∞–µ—Ç –∏ –ù–ï —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç</strong> –≤–∞—à–∏
									–ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤–æ–º
									–†–æ—Å—Å–∏–π—Å–∫–æ–π –§–µ–¥–µ—Ä–∞—Ü–∏–∏.
								</p>
								<p>
									<strong>Email –∞–¥—Ä–µ—Å:</strong> –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è
									–∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏{' '}
									<strong>–ù–ï —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</strong>. –í—ã –º–æ–∂–µ—Ç–µ
									—É–∫–∞–∑–∞—Ç—å –ª—é–±–æ–π email –∞–¥—Ä–µ—Å.
								</p>
								<p>
									<strong>–í–∞—à–µ –∏–º—è:</strong> –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è
									–ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π.
								</p>
								<p className='text-xs text-blue-600 mt-2'>
									–í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–Ω–æ–Ω–∏–º–Ω—ã –∏ –Ω–µ —Å–æ–¥–µ—Ä–∂–∞—Ç –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π
									–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.
								</p>
							</div>
						</div>
					</div>
				</div>
			</div>

			{/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –ø—Ä–∞–≤–∏–ª–∞–º–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è */}
			<TestRulesModal
				isOpen={showRulesModal}
				onClose={() => setShowRulesModal(false)}
				onConfirm={() => {
					setShowRulesModal(false)
					handleStartTest()
				}}
			/>
		</div>
	)
}

export default IntroForm
