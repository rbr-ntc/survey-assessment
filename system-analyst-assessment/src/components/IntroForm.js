import { useAssessment } from './AssessmentContext'

const experienceOptions = [
	'–ú–µ–Ω—å—à–µ –≥–æ–¥–∞',
	'1-2 –≥–æ–¥–∞',
	'2-3 –≥–æ–¥–∞',
	'3-5 –ª–µ—Ç',
	'5+ –ª–µ—Ç',
]

const IntroForm = ({
	menteeInfo,
	setMenteeInfo,
	handleStartAssessment,
	disabled,
	questionsCount,
}) => {
	const { isQuestionsLoading } = useAssessment()
	return (
		<div className='flex items-center justify-center min-h-screen'>
			<div className='w-full max-w-md bg-white rounded-2xl shadow-xl p-8 flex flex-col gap-6'>
				<div className='flex flex-col items-center gap-2'>
					<div className='text-4xl mb-2'>üéØ</div>
					<h1 className='text-2xl font-bold text-gray-800 text-center'>
						–ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞
						<br />
						—Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
					</h1>
					<p className='text-gray-400 text-center text-base'>
						{questionsCount} –≤–æ–ø—Ä–æ—Å
						{questionsCount === 1 ? '' : questionsCount < 5 ? '–∞' : '–æ–≤'} ‚Ä¢
						15-20 –º–∏–Ω—É—Ç ‚Ä¢ AI-—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
					</p>
				</div>
				<form
					className='flex flex-col gap-4'
					onSubmit={e => {
						e.preventDefault()
						if (!isQuestionsLoading) handleStartAssessment()
					}}
				>
					<input
						className='w-full px-4 py-3 rounded-lg border border-gray-200 focus:border-blue-400 focus:ring-2 focus:ring-blue-100 outline-none transition placeholder-gray-400 bg-white text-gray-900'
						type='text'
						placeholder='–í–∞—à–µ –∏–º—è'
						value={menteeInfo.name}
						onChange={e =>
							setMenteeInfo({ ...menteeInfo, name: e.target.value })
						}
					/>
					<input
						className='w-full px-4 py-3 rounded-lg border border-gray-200 focus:border-blue-400 focus:ring-2 focus:ring-blue-100 outline-none transition placeholder-gray-400 bg-white text-gray-900'
						type='email'
						placeholder='Email'
						value={menteeInfo.email}
						onChange={e =>
							setMenteeInfo({ ...menteeInfo, email: e.target.value })
						}
					/>
					<select
						className='w-full px-4 py-3 rounded-lg border border-gray-200 focus:border-blue-400 focus:ring-2 focus:ring-blue-100 outline-none transition bg-white text-gray-900'
						value={menteeInfo.experience}
						onChange={e =>
							setMenteeInfo({ ...menteeInfo, experience: e.target.value })
						}
					>
						<option value=''>–û–ø—ã—Ç –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º –∞–Ω–∞–ª–∏–∑–µ</option>
						{experienceOptions.map(opt => (
							<option key={opt} value={opt}>
								{opt}
							</option>
						))}
					</select>
					<button
						type='submit'
						className='w-full py-3 rounded-lg bg-blue-400 text-white font-semibold text-lg shadow-sm hover:bg-blue-500 transition disabled:bg-gray-300 disabled:cursor-not-allowed'
						disabled={disabled || isQuestionsLoading}
					>
						{isQuestionsLoading
							? '–ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤...'
							: '–ù–∞—á–∞—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ'}
					</button>
					{isQuestionsLoading && (
						<div className='text-center text-blue-400 mt-2'>
							–ó–∞–≥—Ä—É–∑–∫–∞ –≤–æ–ø—Ä–æ—Å–æ–≤...
						</div>
					)}
				</form>
				<div className='bg-gray-100 rounded-lg p-4 mt-2 text-sm text-gray-700'>
					<div className='font-semibold mb-1'>–ß—Ç–æ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ:</div>
					<ul className='list-disc list-inside space-y-1'>
						<li>–û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è (Junior/Middle/Senior)</li>
						<li>–î–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–π</li>
						<li>–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ø–ª–∞–Ω —Ä–∞–∑–≤–∏—Ç–∏—è –æ—Ç AI</li>
						<li>–ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –∏ —Ä–µ—Å—É—Ä—Å—ã</li>
					</ul>
				</div>
			</div>
		</div>
	)
}

export default IntroForm
